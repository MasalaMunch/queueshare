"use strict";

const assert = require(`assert`);
const EmptyStringLog = require(`./EmptyStringLog.js`);
const fs = require(`fs`);
const path = require(`path`);

const encoding = `utf8`;

module.exports = class extends EmptyStringLog {

    static IsSupported () {

        try {

            assert(typeof fs.createWriteStream === `number`);
            assert(typeof fs.readFileSync === `function`);
            assert(typeof fs.writeFileSync === `function`);

            return true;

        } catch (error) {

            return false;

        }

    }

    constructor ({path, separator}) {

        super({path});

        this._path = path;

        this._appendStream = 
            fs.createWriteStream(this._path, {encoding, flags: `a`});

        assert(typeof separator === `string`);

        this._separator = separator;

    }

    Strings () {

        let fileAsString;

        try {

            fileAsString = fs.readFileSync(this._path, {encoding});

        } 
        catch (error) {

            if (error.code === `ENOENT`) {
                fileAsString = ``;
            }
            else {
                throw error;
            }

        }

        const strings = fileAsString.split(this._separator);

        strings.pop();

        return strings;

    }

    clear () {

        fs.writeFileSync(this._path, ``, {encoding});

    }

    addToWriteQueue (string) {

        super.addToWriteQueue(string);

        this._appendStream.write(string + this._separator);

    }

    };