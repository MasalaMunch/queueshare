"use strict";

const add = require(`add`);
const assert = require(`assert`);
const doNothing = require(`do-nothing`);
const ShallowCopy = require(`shallow-copy`);
const transform = require(`transform`);

const State = class {

    constructor (props) {

        props = ShallowCopy(props);

        transform(props, (v) => (typeof v === `function`? v.bind(this) : v));

        add(this, props, {outputs: new Set()});

        this.inputs = new Set(this.inputs);

        for (const state of this.inputs) {

            assert(state instanceof State);

            state.outputs.add(this);

        }

        if (this.update === undefined) {

            this.update = doNothing;

        }
        else {

            assert(typeof this.update === `function`);

        }

    }

    broadcastChange () {

        for (const state of this.outputs) {

            state.update();

        }

    }

    };

module.exports = State;