"use strict";

const assert = require(`assert`);
const doNothing = require(`do-nothing`);
const extend = require(`extend`);

const staticProps = {

    broadcastChange: function () {

        for (const state of this.outputs) {

            state.update();

        }

    },

    };


const State = class {

    constructor (props) {

        Object.assign(this, props);

        this.inputs = new Set(this.inputs);

        for (const state of this.inputs) {

            assert(state instanceof State);

            state.outputs.add(this);

        }

        if (this.update === undefined) {

            this.update = doNothing;

        }
        else {

            assert(typeof this.update === `function`);

        }

        extend(this, staticProps, {outputs: new Set()});

        for (const [key, value] of Object.entries(this)) {

            if (typeof value === `function`) {

                this[key] = value.bind(this);

            }

        }

    }

    };

module.exports = State;