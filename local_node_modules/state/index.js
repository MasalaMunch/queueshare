"use strict";

const assert = require(`assert`);
const extend = require(`extend`);

const broadcastChange = () => {

    for (const state of this.outputs) {

        state.update();

    }

};

const State = class {

    constructor (props) {

        Object.assign(this, props);

        this.inputs = new Set(this.inputs);

        for (const state of this.inputs) {

            assert(state instanceof State);

            state.outputs.add(this);

        }

        this.update = this.update === undefined? () => {} : this.update;

        assert(typeof this.update === `function`);

        extend(this, {broadcastChange, outputs: new Set()});

        for (const [key, value] of Object.entries(this)) {

            if (typeof value === `function`) {

                this[key] = value.bind(this);

            }

        }

    }

    };

module.exports = State;